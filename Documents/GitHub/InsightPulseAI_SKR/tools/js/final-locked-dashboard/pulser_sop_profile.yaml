# pulser_sop_profile.yaml
# InsightPulseAI Unified Developer Deployment SOP Profile
# Version: 1.0
# This profile can be used to replicate the SOP structure across all InsightPulseAI applications

sop_profile:
  name: "Unified Developer Deployment SOP"
  version: "1.0"
  maintainer: "InsightPulseAI Dev Team"
  last_updated: "2025-05-14"
  description: >
    Standard Operating Procedure for consistent deployment of applications, dashboards,
    code, and AI agent updates across environments (local, Azure, Vercel),
    with a focus on visual integrity and deployment safety.
  
  # Directory structure template to replicate
  directory_structure:
    - path: "scripts"
      description: "All deployment, packaging, and utility scripts"
      required: true
    - path: "public"
      description: "Static assets (HTML, CSS, JS, images)"
      required: false
    - path: "css"
      description: "Design system, Tailwind patches, style harmonization"
      required: false
    - path: "js" 
      description: "Visualization logic, GenAI integrations"
      required: false
    - path: "docs"
      description: "All documentation, SOPs, style guides, and mappings"
      required: true
    - path: "tools"
      description: "Monitoring and validation tools"
      required: true
    - path: "Makefile"
      description: "Unified automation entrypoint"
      required: true
    - path: "README_DESKTOP.md"
      description: "Human-readable deployment overview"
      required: true
    - path: "SKR/archives/{project}/{date}"
      description: "SKR archive entries for deployment protocols"
      required: true

  # Standard core scripts to replicate
  core_scripts:
    - name: "package_app.sh"
      template: "scripts/package_dashboard.sh"
      description: "Packages application assets for deployment"
      customize:
        - "Application name"
        - "Source directories"
        - "Output path"
      required: true
    
    - name: "deploy_app.sh"
      template: "scripts/deploy_dashboard.sh"
      description: "Deploys packaged application to target environment"
      customize:
        - "Azure resource names"
        - "Environment-specific settings"
        - "Validation steps"
      required: true
    
    - name: "verify_style_compliance.js"
      template: "tools/verify_style_compliance.js"
      description: "Verifies application styling matches guidelines"
      customize:
        - "Style checks"
        - "Critical vs warning items"
        - "Style guide references"
      required: false
    
    - name: "monitor_app_uptime.js"
      template: "tools/monitor_dashboard_uptime.js"
      description: "Monitors application availability and performance"
      customize:
        - "URLs to monitor"
        - "Alert thresholds"
        - "Log paths"
      required: false

  # Documentation templates
  documentation:
    - name: "SOP_DEPLOYMENT.md"
      template: "docs/SOP_DEPLOYMENT.md"
      description: "Primary SOP reference document"
      required: true
    
    - name: "QA_GUIDELINES.md"
      template: "docs/QA_GUIDELINES_POWERBI_PARITY.md"
      description: "QA guidelines for the application"
      customize:
        - "Application-specific checklists"
        - "Visual elements to verify"
        - "Functional requirements"
      required: true
    
    - name: "STYLE_GUIDE.md"
      template: "POWER_BI_STYLE_GUIDE.md"
      description: "Style specifications for the application"
      customize:
        - "Color schemes"
        - "Typography"
        - "Component styling"
      required: false
    
    - name: "README_DESKTOP.md"
      template: "README_DESKTOP.md"
      description: "Simplified deployment instructions"
      required: true

  # Makefile targets
  makefile_targets:
    - name: "package"
      command: "./scripts/package_app.sh"
      description: "Create deployment package"
      required: true
    
    - name: "deploy"
      command: "./scripts/deploy_app.sh"
      description: "Deploy to target environment"
      required: true
    
    - name: "deploy-dry-run"
      command: "DRY_RUN=true ./scripts/deploy_app.sh"
      description: "Test deployment without executing"
      required: true
    
    - name: "verify-style"
      command: "./tools/verify_style_compliance.js"
      description: "Verify style compliance"
      required: false
    
    - name: "monitor"
      command: "./tools/monitor_app_uptime.js"
      description: "Monitor application uptime"
      required: false
    
    - name: "clean"
      command: "rm -rf output/*"
      description: "Clean up temporary files"
      required: true

  # Pulser agent integration template
  pulser_tasks:
    tasks:
      - id: "deploy_app"
        name: "Deploy Application"
        agent: "Basher"
        script: "scripts/deploy_app.sh"
        description: "Deploys application to target environment"
        env_vars:
          - "APP_NAME"
          - "RESOURCE_GROUP"
        triggers:
          - "make deploy"
          - "/deploy {app}"
          - ":deploy {app}"
      
      - id: "package_app"
        name: "Package Application"
        agent: "Basher"
        script: "scripts/package_app.sh"
        description: "Packages application for deployment"
        env_vars:
          - "ROOT_DIR"
        triggers:
          - "make package"
          - "/package {app}"
          - ":package {app}"
      
      - id: "validate_app"
        name: "Validate Application"
        agent: "Basher"
        script: "scripts/deploy_app.sh --dry-run"
        description: "Performs a dry run of deployment"
        env_vars:
          - "APP_NAME"
          - "RESOURCE_GROUP"
          - "DRY_RUN"
        triggers:
          - "make deploy-dry-run"
          - "/validate {app}"
          - ":validate {app}"
      
      - id: "verify_style"
        name: "Verify Style Compliance"
        agent: "Caca"
        script: "tools/verify_style_compliance.js"
        description: "Verifies application style compliance"
        env_vars:
          - "STYLE_GUIDE_PATH"
          - "APP_PATH"
        triggers:
          - "make verify-style"
          - "/verify style"
          - ":verify {app}"
      
      - id: "monitor_app"
        name: "Monitor Application"
        agent: "Echo"
        script: "tools/monitor_app_uptime.js"
        description: "Monitors application uptime and performance"
        env_vars:
          - "APP_URL"
          - "ALERT_THRESHOLD_MS"
        schedule: 
          - "0 */6 * * *"
        triggers:
          - "make monitor"
          - "/monitor {app}"
          - ":monitor {app}"
    
    workflows:
      - id: "deploy_and_monitor"
        name: "Deploy and Monitor Application"
        description: "Full workflow to deploy and monitor an application"
        steps:
          - task: "package_app"
          - task: "validate_app"
          - task: "verify_style"
          - task: "deploy_app"
          - task: "monitor_app"
        triggers:
          - "/deploy full"
          - ":deploy full"
      
      - id: "qa_validate"
        name: "QA Validation"
        description: "Run all verification steps without deployment"
        steps:
          - task: "validate_app"
          - task: "verify_style"
        triggers:
          - "/qa validate"
          - ":qa {app}"

  # SKR integration template
  skr_integration:
    archive_path: "SKR/archives/{project}/{date}/DEPLOYMENT_PROTOCOLS.md"
    metadata_path: "SKR/archives/{project}/{date}/metadata.yaml"
    document_id_format: "sop_deployment_v1_{date}"
    metadata_template:
      title: "InsightPulseAI: Unified Developer Deployment SOP v1.0 for {app}"
      category: "standard_operating_procedure"
      tags:
        - "deployment"
        - "sop"
        - "{app}"
        - "pulser"
      summary: "Standard Operating Procedure for consistent deployment of {app}"
      agents:
        - agent_id: "Basher"
          role: "Deployment executor"
        - agent_id: "Caca"
          role: "QA verification"
        - agent_id: "Echo"
          role: "Monitoring"
        - agent_id: "Claudia"
          role: "Task orchestration"

  # Application templates
  app_templates:
    - name: "PRISMA"
      type: "analysis_platform"
      deploy_target: "azure"
      description: "Predictive Retail Intelligence and Sales Modeling Application"
      custom_requirements:
        - "ML model versioning"
        - "Data pipeline verification"
        - "Performance benchmarking"
    
    - name: "GEZ"
      type: "ai_engine"
      deploy_target: "kubernetes"
      description: "Global Enterprise Zone AI Engine"
      custom_requirements:
        - "Load balancer configuration"
        - "Scaling policy verification"
        - "Health probe setup"
    
    - name: "PulseUP"
      type: "dashboard"
      deploy_target: "vercel"
      description: "Unified Performance Dashboard"
      custom_requirements:
        - "Vercel project linking"
        - "Environment variable synchronization"
        - "Preview deployment support"

# Deployment checklist template
deployment_checklist:
  - category: "Package Preparation"
    items:
      - "Application code is linted and passes all tests"
      - "Dependencies are up-to-date and properly documented"
      - "API keys and secrets are properly handled"
      - "Environment-specific configurations are externalized"
      - "Static assets are optimized"
  
  - category: "Deployment Verification"
    items:
      - "Application loads correctly in all target environments"
      - "Authentication and authorization work as expected"
      - "API endpoints are accessible and respond correctly"
      - "Static assets are served properly"
      - "Error handling and logging are functioning"
  
  - category: "Style and UX Compliance"
    items:
      - "UI matches the approved design specifications"
      - "Responsive layout functions on all target devices"
      - "Color scheme matches the style guide"
      - "Typography and spacing follow design standards"
      - "Interactive elements provide proper feedback"
  
  - category: "Post-Deployment"
    items:
      - "Monitoring is activated and alerts are configured"
      - "Documentation is updated with latest changes"
      - "SKR archive is created with deployment protocols"
      - "Pulser tasks are registered for ongoing maintenance"
      - "Stakeholders are notified of successful deployment"

# Instructions for cloning to new applications
clone_instructions: |
  To clone this SOP system to a new InsightPulseAI application:
  
  1. Copy the pulser_sop_profile.yaml to the target application root.
  2. Run the SOP initialization script:
     ```bash
     pulser init sop --profile pulser_sop_profile.yaml --app APP_NAME
     ```
  3. Customize the generated templates for your application.
  4. Run validation to ensure all SOP requirements are met:
     ```bash
     pulser validate sop
     ```
  5. Register the SOP with the Pulser system:
     ```bash
     pulser register sop --app APP_NAME
     ```
  6. Create an SKR archive entry documenting the SOP implementation.
  
  This will create all required directory structures, scripts, documentation,
  and Pulser integrations following the Unified Developer Deployment SOP.