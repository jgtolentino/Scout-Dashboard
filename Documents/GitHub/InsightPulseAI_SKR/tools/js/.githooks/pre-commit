#!/bin/bash

# Pre-commit hook to check for internal branding and AI signatures

set -euo pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}Running whitelabel compliance checks...${NC}"

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    exit 0
fi

FOUND_ISSUES=0
ISSUES_DETAIL=""

# Check for internal branding terms
BRANDING_TERMS=(
    "InsightPulseAI"
    "InsightPulse AI"
    "Pulser"
    "TBWA"
    "Project Scout"
    "Claudia"
    "Maya"
    "Kalaw"
    "Tide"
    "Caca"
    "Basher"
    "Surf"
)

# Check for AI signatures
AI_SIGNATURES=(
    "Generated with \[Claude"
    "Co-Authored-By: Claude"
    "Generated by Copilot"
    "Copilot suggestion"
    "Created by Cline"
    "Cursor AI"
    "Generated by AI"
    "AI-generated"
    "ðŸ¤– Generated"
    "ðŸ¤– AI"
)

echo "Checking for internal branding..."
for file in $STAGED_FILES; do
    # Skip binary files and specific directories
    if [[ "$file" == *.png ]] || [[ "$file" == *.jpg ]] || [[ "$file" == *.gif ]] || \
       [[ "$file" == *node_modules* ]] || [[ "$file" == *dist/* ]] || \
       [[ "$file" == .gitignore ]] || [[ "$file" == *whitelabel* ]]; then
        continue
    fi
    
    # Check for branding terms
    for term in "${BRANDING_TERMS[@]}"; do
        if grep -q "$term" "$file" 2>/dev/null; then
            FOUND_ISSUES=$((FOUND_ISSUES + 1))
            ISSUES_DETAIL+="\n  - Found '$term' in $file"
        fi
    done
    
    # Check for AI signatures
    for sig in "${AI_SIGNATURES[@]}"; do
        if grep -q "$sig" "$file" 2>/dev/null; then
            FOUND_ISSUES=$((FOUND_ISSUES + 1))
            ISSUES_DETAIL+="\n  - Found AI signature in $file"
        fi
    done
done

# Check for internal file patterns
echo "Checking for internal files..."
INTERNAL_PATTERNS=(
    "CLAUDE.md"
    "pulser.config"
    ".pulserrc"
    "agents/"
    "pulser/"
    "InsightPulseAI"
    "internal_"
    "_INTERNAL"
)

for pattern in "${INTERNAL_PATTERNS[@]}"; do
    for file in $STAGED_FILES; do
        if [[ "$file" == *"$pattern"* ]]; then
            FOUND_ISSUES=$((FOUND_ISSUES + 1))
            ISSUES_DETAIL+="\n  - Internal file pattern: $file"
        fi
    done
done

# Report results
if [ $FOUND_ISSUES -gt 0 ]; then
    echo -e "${RED}âœ— Whitelabel compliance check failed!${NC}"
    echo -e "${RED}Found $FOUND_ISSUES branding/signature issues:${NC}"
    echo -e "$ISSUES_DETAIL"
    echo ""
    echo -e "${YELLOW}To fix these issues:${NC}"
    echo "1. Run: ./whitelabel_deploy.sh <directory> to clean a deployment"
    echo "2. Or manually remove internal branding from the files"
    echo "3. Use generic terms instead of internal names"
    echo ""
    echo -e "${YELLOW}To bypass this check (not recommended):${NC}"
    echo "git commit --no-verify"
    exit 1
else
    echo -e "${GREEN}âœ“ Whitelabel compliance check passed!${NC}"
fi

exit 0