#!/bin/bash
# Script to prepare Scout Dashboard deployment packages with proper URL structure
# This script ensures both directory structure and flat HTML files are created,
# along with proper routing configuration in staticwebapp.config.json

set -e

# Configuration
SOURCE_DIR=${1:-"deploy-advisor-fixed"}
OUTPUT_DIR=${2:-"scout_dashboard_deploy_package"}
TIMESTAMP=$(date +%Y%m%d%H%M%S)

echo "🛠️ Scout Dashboard Deployment Package Preparation"
echo "=================================================="
echo "Source: $SOURCE_DIR"
echo "Output: $OUTPUT_DIR"
echo

# Create output directory
rm -rf "$OUTPUT_DIR"
mkdir -p "$OUTPUT_DIR"

# Copy all source files
echo "1️⃣ Copying source files..."
cp -r "$SOURCE_DIR"/* "$OUTPUT_DIR"/

# Ensure all necessary directories exist
echo "2️⃣ Creating directory structure..."
mkdir -p "$OUTPUT_DIR/advisor"
mkdir -p "$OUTPUT_DIR/edge"
mkdir -p "$OUTPUT_DIR/ops"

# If index files don't exist in the directories, create them by copying the flat files
if [ ! -f "$OUTPUT_DIR/advisor/index.html" ] && [ -f "$OUTPUT_DIR/advisor.html" ]; then
  echo "Creating advisor/index.html from advisor.html..."
  cp "$OUTPUT_DIR/advisor.html" "$OUTPUT_DIR/advisor/index.html"
fi

if [ ! -f "$OUTPUT_DIR/edge/index.html" ] && [ -f "$OUTPUT_DIR/edge.html" ]; then
  echo "Creating edge/index.html from edge.html..."
  cp "$OUTPUT_DIR/edge.html" "$OUTPUT_DIR/edge/index.html"
fi

if [ ! -f "$OUTPUT_DIR/ops/index.html" ] && [ -f "$OUTPUT_DIR/ops.html" ]; then
  echo "Creating ops/index.html from ops.html..."
  cp "$OUTPUT_DIR/ops.html" "$OUTPUT_DIR/ops/index.html"
fi

# If flat HTML files don't exist, create them from directory index files
if [ ! -f "$OUTPUT_DIR/advisor.html" ] && [ -f "$OUTPUT_DIR/advisor/index.html" ]; then
  echo "Creating advisor.html from advisor/index.html..."
  cp "$OUTPUT_DIR/advisor/index.html" "$OUTPUT_DIR/advisor.html"
fi

if [ ! -f "$OUTPUT_DIR/edge.html" ] && [ -f "$OUTPUT_DIR/edge/index.html" ]; then
  echo "Creating edge.html from edge/index.html..."
  cp "$OUTPUT_DIR/edge/index.html" "$OUTPUT_DIR/edge.html"
fi

if [ ! -f "$OUTPUT_DIR/ops.html" ] && [ -f "$OUTPUT_DIR/ops/index.html" ]; then
  echo "Creating ops.html from ops/index.html..."
  cp "$OUTPUT_DIR/ops/index.html" "$OUTPUT_DIR/ops.html"
fi

# Create or update staticwebapp.config.json
echo "3️⃣ Creating routing configuration..."
cat > "$OUTPUT_DIR/staticwebapp.config.json" << 'EOF'
{
  "routes": [
    { 
      "route": "/advisor", 
      "rewrite": "/advisor/index.html" 
    },
    { 
      "route": "/edge", 
      "rewrite": "/edge/index.html" 
    },
    { 
      "route": "/ops", 
      "rewrite": "/ops/index.html" 
    },
    {
      "route": "/insights_dashboard.html",
      "redirect": "/advisor",
      "statusCode": 301
    },
    {
      "route": "/advisor.html", 
      "rewrite": "/advisor/index.html" 
    },
    {
      "route": "/edge.html", 
      "rewrite": "/edge/index.html" 
    },
    {
      "route": "/ops.html", 
      "rewrite": "/ops/index.html" 
    }
  ],
  "navigationFallback": {
    "rewrite": "/index.html",
    "exclude": ["/images/*.{png,jpg,gif}", "/css/*", "/js/*", "/assets/*"]
  },
  "globalHeaders": {
    "X-Dashboard-Tag": "scout_dashboards_clean_urls",
    "X-Patch-ID": "dashboard-url-structure-v2-fixed",
    "X-Client-Context": "TBWA-direct-only",
    "X-Generated-By": "Pulser-CLI-Claude"
  }
}
EOF

# Create a README file explaining the package
echo "4️⃣ Creating documentation..."
cat > "$OUTPUT_DIR/README.md" << EOF
# Scout Dashboard Deployment Package

## Overview
This package contains the Scout Dashboard with proper URL structure for Azure Static Web Apps deployment.

## File Structure
- Both directory structure (/advisor/index.html) and flat files (advisor.html) included
- Proper staticwebapp.config.json with routing rules

## Deployment Instructions
1. Upload this package to Azure Static Web Apps
2. Verify all URLs are accessible:
   - /advisor
   - /advisor.html
   - /edge
   - /edge.html
   - /ops
   - /ops.html
   - /insights_dashboard.html (should redirect to /advisor)

## Package Information
- Generated: $(date)
- Generated by: prepare_dashboard_deployment.sh
- Source: $SOURCE_DIR
EOF

# Create zip package
echo "5️⃣ Creating deployment package..."
ZIP_NAME="scout_dashboard_${TIMESTAMP}.zip"
(cd "$OUTPUT_DIR" && zip -r "../$ZIP_NAME" .)

echo
echo "✅ Deployment package created successfully!"
echo "📦 Package: $ZIP_NAME"
echo "📁 Extracted: $OUTPUT_DIR"
echo
echo "To verify the package structure:"
echo "  ls -la $OUTPUT_DIR"
echo
echo "To validate URLs after deployment:"
echo "  ./dashboard_url_verification.sh https://your-azure-url"