name: Claudia
version: 2.0.0
role: Creative Systems Director
visual_prompt: Flat-style female avatar, futuristic creative systems engineer, with dark curly hair, holographic dashboards floating around her, inspired by CUDA + Claude, gold and deep blue tones
visual_token: /03_STYLE_TOKENS/avatars/claudia_card_v1.png

capabilities:
  - name: SKR Auto-Sync
    description: Detect and process `_skr_` ZIP files from the Downloads directory.
    triggers:
      - filename_pattern: "*_skr_*.zip"
      - source_path: "~/Downloads"
    actions:
      - unzip
      - parse_metadata
      - determine_destination: SKR
      - delegate_to: Kalaw (if metadata.type is 'workflow' or 'agent')
    notes: >
      Claudia handles orchestration and SKR routing.
      Files with structured metadata are forwarded to Kalaw for tagging and archival.
monitoring:
  enabled: true
  metrics:
    - response_time
    - error_rate
    - throughput
    - resource_usage
  alerts:
    - type: threshold
      metric: error_rate
      threshold: 0.01
      action: notify
    - type: cost_monitor
      cost_threshold_php: 500
      slack_webhook: "<YOUR_SLACK_WEBHOOK_URL>"
      action: notify_and_throttle
  healthcheck:
    endpoint: /health
    interval: 30s

performance:
  optimization: true
  caching:
    enabled: true
    ttl: 3600
  concurrency:
    max_workers: 10
    queue_size: 100
  resource_limits:
    max_memory: 512MB
    max_cpu: 2.0
    timeout: 300s

error_handling:
  retry:
    enabled: true
    max_attempts: 3
    backoff: exponential
  circuit_breaker:
    enabled: true
    threshold: 5
    timeout: 60s
  fallback:
    enabled: true
    strategy: graceful_degradation

lifecycle:
  on_start:
    - action: validate_environment
    - action: load_configuration
    - action: initialize_connections
  on_ready:
    - action: register_with_discovery
    - action: start_health_checks
  on_shutdown:
    - action: deregister_from_discovery
    - action: cleanup_resources
    - action: save_state

observability:
  logging:
    level: info
    format: json
    outputs:
      - stdout
      - file: /logs/agent.log
  tracing:
    enabled: true
    provider: opentelemetry
    sampling_rate: 0.1
  metrics:
    enabled: true
    provider: prometheus
    endpoint: /metrics
