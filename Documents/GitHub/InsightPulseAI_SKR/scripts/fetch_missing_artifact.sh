#!/bin/bash

# fetch_missing_artifact.sh - Fetch missing PDF documents by ID or URL
# Usage: ./fetch_missing_artifact.sh [doc_id] [source_url]

# Configuration
SKR_ROOT="/Users/tbwa/Documents/GitHub/InsightPulseAI_SKR"
ARTIFACTS_DIR="$SKR_ROOT/SKR/03_Artifacts"
LOG_FILE="$SKR_ROOT/SKR/skr_docs.yaml"
DOWNLOADS="/Users/tbwa/Downloads"

# Initialize with default parameters
DOC_ID=${1:-""}
SOURCE_URL=${2:-""}
TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")

# Create necessary directories
mkdir -p "$ARTIFACTS_DIR"

# Ensure log file exists with proper header if needed
if [ ! -f "$LOG_FILE" ]; then
  echo "# SKR Document Registry" > "$LOG_FILE"
  echo "# Auto-generated by fetch_missing_artifact.sh" >> "$LOG_FILE"
  echo "# Last updated: $TIMESTAMP" >> "$LOG_FILE"
  echo "documents:" >> "$LOG_FILE"
fi

# Check if parameters are valid
if [ -z "$DOC_ID" ]; then
  echo "❌ Error: Missing document ID parameter."
  echo "Usage: ./fetch_missing_artifact.sh [doc_id] [source_url]"
  exit 1
fi

# Create the document filename
DOC_FILENAME="skr_doc_${DOC_ID}.pdf"
DOC_PATH="$ARTIFACTS_DIR/$DOC_FILENAME"

# Check if document already exists
if [ -f "$DOC_PATH" ]; then
  echo "✅ Document already exists at $DOC_PATH"
  exit 0
fi

# Check if we need to fetch from URL
if [ -n "$SOURCE_URL" ] && [[ "$SOURCE_URL" == http* ]]; then
  echo "🔄 Fetching document from URL: $SOURCE_URL"
  
  # Download to temporary location first
  TEMP_PATH="$DOWNLOADS/$DOC_FILENAME"
  
  # Use curl to download the file
  if curl -s -L -o "$TEMP_PATH" "$SOURCE_URL"; then
    # Check if download was successful
    if [ -f "$TEMP_PATH" ]; then
      # Move to artifacts directory
      mv "$TEMP_PATH" "$DOC_PATH"
      echo "✅ Successfully downloaded and moved to $DOC_PATH"
      
      # Log the document
      echo "  - id: $DOC_ID" >> "$LOG_FILE"
      echo "    filename: $DOC_FILENAME" >> "$LOG_FILE"
      echo "    source: $SOURCE_URL" >> "$LOG_FILE"
      echo "    fetched: $TIMESTAMP" >> "$LOG_FILE"
      echo "    status: downloaded" >> "$LOG_FILE"
      echo "" >> "$LOG_FILE"
      
      echo "📝 Document registered in $LOG_FILE"
      exit 0
    else
      echo "❌ Download failed: File not found after download attempt."
      
      # Log the failed attempt
      echo "  - id: $DOC_ID" >> "$LOG_FILE"
      echo "    source: $SOURCE_URL" >> "$LOG_FILE"
      echo "    attempted: $TIMESTAMP" >> "$LOG_FILE"
      echo "    status: failed" >> "$LOG_FILE"
      echo "" >> "$LOG_FILE"
      
      exit 1
    fi
  else
    echo "❌ Download failed: Could not connect to URL."
    exit 1
  fi
fi

# Check if document exists in downloads folder
if [ -f "$DOWNLOADS/$DOC_FILENAME" ]; then
  echo "🔄 Found document in downloads folder, moving to artifacts directory."
  mv "$DOWNLOADS/$DOC_FILENAME" "$DOC_PATH"
  
  # Log the document
  echo "  - id: $DOC_ID" >> "$LOG_FILE"
  echo "    filename: $DOC_FILENAME" >> "$LOG_FILE"
  echo "    source: local_downloads" >> "$LOG_FILE"
  echo "    fetched: $TIMESTAMP" >> "$LOG_FILE"
  echo "    status: moved" >> "$LOG_FILE"
  echo "" >> "$LOG_FILE"
  
  echo "✅ Successfully moved to $DOC_PATH"
  echo "📝 Document registered in $LOG_FILE"
  exit 0
fi

# If we reach here, document was not found
echo "❌ Document not found: $DOC_FILENAME"

# Log the missing document
echo "  - id: $DOC_ID" >> "$LOG_FILE"
echo "    attempted: $TIMESTAMP" >> "$LOG_FILE"
echo "    status: missing" >> "$LOG_FILE"
echo "" >> "$LOG_FILE"

exit 1