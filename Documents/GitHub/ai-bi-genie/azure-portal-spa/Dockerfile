# Multi-stage Docker build for Angular SPA\n\n# Stage 1: Build the Angular application\nFROM node:18-alpine AS build\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm ci --only=production && npm cache clean --force\n\n# Copy source code\nCOPY . .\n\n# Build the application for production\nRUN npm run build:prod\n\n# Stage 2: Serve the application with Nginx\nFROM nginx:alpine AS runtime\n\n# Copy custom nginx configuration\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\n\n# Copy built application from build stage\nCOPY --from=build /app/dist/azure-portal-spa /usr/share/nginx/html\n\n# Create a non-root user for security\nRUN addgroup -g 1001 -S nginx-user && \\\n    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx-user -g nginx-user nginx-user\n\n# Set proper permissions\nRUN chown -R nginx-user:nginx-user /usr/share/nginx/html && \\\n    chown -R nginx-user:nginx-user /var/cache/nginx && \\\n    chown -R nginx-user:nginx-user /var/log/nginx && \\\n    chown -R nginx-user:nginx-user /etc/nginx/conf.d\n\n# Touch and set permissions for pid file\nRUN touch /var/run/nginx.pid && \\\n    chown -R nginx-user:nginx-user /var/run/nginx.pid\n\n# Switch to non-root user\nUSER nginx-user\n\n# Expose port 8080 (non-privileged port)\nEXPOSE 8080\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1\n\n# Start Nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"