version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-bi-genie-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - ai-bi-genie-network

  # PostgreSQL Database (for local development)
  postgres:
    image: postgres:15-alpine
    container_name: ai-bi-genie-postgres
    environment:
      POSTGRES_DB: ai_bi_genie
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema:/docker-entrypoint-initdb.d
    networks:
      - ai-bi-genie-network

  # Streamlit BI Dashboard
  streamlit-app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: ai-bi-genie-streamlit
    ports:
      - "8501:8501"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/ai_bi_genie
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=INFO
    volumes:
      - ./app:/app
    depends_on:
      - postgres
      - redis
    networks:
      - ai-bi-genie-network
    restart: unless-stopped

  # Angular Portal (Development Server)
  angular-portal:
    build:
      context: ./azure-portal-spa
      dockerfile: Dockerfile.dev
    container_name: ai-bi-genie-angular
    ports:
      - "4200:4200"
    volumes:
      - ./azure-portal-spa:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - ai-bi-genie-network
    restart: unless-stopped

  # API Gateway (Mock for development)
  api-gateway:
    image: nginx:alpine
    container_name: ai-bi-genie-gateway
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - streamlit-app
    networks:
      - ai-bi-genie-network
    restart: unless-stopped

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-bi-genie-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ai-bi-genie-network
    restart: unless-stopped

  # Grafana (Visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: ai-bi-genie-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - ai-bi-genie-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  ai-bi-genie-network:
    driver: bridge