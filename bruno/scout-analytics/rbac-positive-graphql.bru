meta {
  name: RBAC - GraphQL read access with anon key (should succeed)
  type: http
  seq: 2
}

post {
  url: {{SUPABASE_URL}}/graphql/v1
  body: json({
    "query": "query { api { recommendations(limit: 5) { id company subcategory score created_at } } }"
  })
}

headers {
  apikey: {{SUPABASE_ANON_KEY}}
  Authorization: Bearer {{SUPABASE_ANON_KEY}}
  Content-Type: application/json
}

tests {
  test("Should allow GraphQL read access with anon key", function() {
    expect(res.status).to.eq(200);
  });
  
  test("Should return valid GraphQL response structure", function() {
    const body = JSON.parse(res.body);
    expect(body).to.have.property('data');
    expect(body.errors).to.be.undefined;
  });
  
  test("Should not expose sensitive data", function() {
    const bodyText = res.body;
    expect(bodyText).to.not.contain('password');
    expect(bodyText).to.not.contain('secret'); 
    expect(bodyText).to.not.contain('internal');
    expect(bodyText).to.not.contain('vault');
  });
}